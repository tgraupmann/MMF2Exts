{
	"Identifier": "CHRO",
	"Dependencies": "",
	"UK English": {
		"About": {
			"Name": "ChromaSDK",
			"Author": "Tim Graupmann",
			"Copyright": "Copyright \u00A9 2020 by Razer US Ltd.",
			"Comment": "Control Chroma RGB from CF2.5",
			"Help": "https://github.com/RazerOfficial/ClickTeamFusion_ChromaSDK",
			"URL": "https://www.razer.com/"
		},
		"ActionMenu": [
			[
				"Setup",
				[ 19, "Initialize Extension" ]
			],
			[
				"Lua",
				[ 20, "Register ChromaSDK with Lua" ],
				[ 22, "Lua Load String" ],
				[ 23, "Lua Load File" ]
			],
			[
				"Colors",
				[ 2, "Set Device to RGB" ],
				[ 3, "Set All Devices to RGB" ],
				[ 13, "Lerp All Frames Between Two Colors with Frame RGB Data as Input" ],
				[ 14, "Lerp All Frames Between Two Colors with Frame RGB Data as Input (Ignore Blank RGB Values)" ],
				[ 15, "Fill All Frames with Color where RGB is Blank" ],
				[ 16, "Offset All Frames with RGB Offset" ],
				[ 28, "Set Frame Color Data by Index" ]
			],
			[
				"Animations",
				[ 5, "Get Animation" ],
				[ 0, "Play Animation" ],
				[ 21, "Stop Animation" ],
				[ 1, "Play Composite" ],
				[ 26, "Load Animation" ],
				[ 27, "Unload Animation" ],
				[ 4, "Close Animation" ]
			],
			[
				"Timing",
				[ 6, "Duplicate First Frame" ],
				[ 7, "Duplicate Frames" ],
				[ 8, "Make Blank Frames" ],
				[ 9, "Reduce Frames" ],
				[ 10, "Insert Delay" ],
				[ 11, "Trim Start Frames" ],
				[ 12, "Trim End Frames" ]
			],
			[
				"Layers",
				[ 18, "Copy All Frames with Source Non-Blank RGB to Target" ],
				[ 17, "Copy All Frames with Source Non-Blank RGB to Target Non-Blank RGB" ],
				[ 24, "Copy Source Animation as Target Animation" ],
				[ 25, "Append Target Animation to Source Animation" ]
			]
		],
		"ConditionMenu": [
			[ 0, "Is Extension Initialized?" ],
			[ 1, "Initialize Extension?" ]
		],
		"ExpressionMenu": [
			[ 0, "Is Extension Initialized" ],
			[ 1, "Initialize Extension" ],
			[ 2, "Get RGB" ],
			[ 3, "Get Integer Device Type" ],
			[ 4, "Get Integer Device" ],
			[ 5, "Get Frame Count" ],
			[ 6, "Get Color Data Size" ]
		],
		"Actions": [
			{
				"Title": "Play Animation",
				"Parameters": [
					[ "Text", "Path" ],
					[ "Integer", "Loop" ]
				]
			},
			{
				"Title": "Play Composite",
				"Parameters": [
					[ "Text", "Name" ],
					[ "Integer", "Loop" ]
				]
			},
			{
				"Title": "Static Color",
				"Parameters": [
					[ "Integer", "DeviceType" ],
					[ "Integer", "Device" ],
					[ "Integer", "Color" ]
				]
			},
			{
				"Title": "Static Color All Devices",
				"Parameters": [
					[ "Integer", "Color" ]
				]
			},
			{
				"Title": "Close Animation",
				"Parameters": [
					[ "Text", "Path" ]
				]
			},
			{
				"Title": "Get Animation",
				"Parameters": [
					[ "Text", "Path" ]
				]
			},
			{
				"Title": "Duplicate First Frame",
				"Parameters": [
					[ "Text", "Path" ],
					[ "Integer", "Frame Count" ]
				]
			},
			{
				"Title": "Duplicate Frames",
				"Parameters": [
					[ "Text", "Path" ]
				]
			},
			{
				"Title": "Make Blank Frames",
				"Parameters": [
					[ "Text", "Path" ],
					[ "Integer", "Frame Count" ],
					[ "Float", "Duration" ],
					[ "Integer", "Color" ]
				]
			},
			{
				"Title": "Reduce Frames",
				"Parameters": [
					[ "Text", "Path" ],
					[ "Integer", "N" ]
				]
			},
			{
				"Title": "Insert Delay",
				"Parameters": [
					[ "Text", "Path" ],
					[ "Integer", "Frame Id" ],
					[ "Integer", "Delay" ]
				]
			},
			{
				"Title": "Trim Start Frames",
				"Parameters": [
					[ "Text", "Path" ],
					[ "Integer", "Number of Frames" ]
				]
			},
			{
				"Title": "Trim End Frames",
				"Parameters": [
					[ "Text", "Path" ],
					[ "Integer", "Last Frame Id" ]
				]
			},
			{
				"Title": "Multiply Target Color Lerp All Frames",
				"Parameters": [
					[ "Text", "Path" ],
					[ "Integer", "Color 1" ],
					[ "Integer", "Color 2" ]
				]
			},
			{
				"Title": "Multiply NonZero Target Color Lerp All Frames",
				"Parameters": [
					[ "Text", "Path" ],
					[ "Integer", "Color 1" ],
					[ "Integer", "Color 2" ]
				]
			},
			{
				"Title": "Fill Zero Color All Frames",
				"Parameters": [
					[ "Text", "Path" ],
					[ "Integer", "Color" ]
				]
			},
			{
				"Title": "Offset Colors All Frames",
				"Parameters": [
					[ "Text", "Path" ],
					[ "Integer", "Red" ],
					[ "Integer", "Green" ],
					[ "Integer", "Blue" ]
				]
			},
			{
				"Title": "Copy Non Zero Target All Keys All Frames",
				"Parameters": [
					[ "Text", "Source Animation Path" ],
					[ "Text", "Target Animation Path" ]
				]
			},
			{
				"Title": "Copy Non Zero All Keys All Frames",
				"Parameters": [
					[ "Text", "Source Animation Path" ],
					[ "Text", "Target Animation Path" ]
				]
			},
			{
				"Title": "Initialize Extension"
			},
			{
				"Title": "Register ChromaSDK with Lua"
			},
			{
				"Title": "Stop Animation",
				"Parameters": [
					[ "Text", "Path" ]
				]
			},
			{
				"Title": "Lua Load String",
				"Parameters": [
					[ "Text", "Source" ]
				]
			},
			{
				"Title": "Lua Load File",
				"Parameters": [
					[ "Text", "Path" ]
				]
			},
			{
				"Title": "Copy Source Animation as Target Animation",
				"Parameters": [
					[ "Text", "Source Animation Path" ],
					[ "Text", "Target Animation Path" ]
				]
			},
			{
				"Title": "Append Target Animation to Source Animation",
				"Parameters": [
					[ "Text", "Source Animation Path" ],
					[ "Text", "Target Animation Path" ]
				]
			},
			{
				"Title": "Load Animation",
				"Parameters": [
					[ "Text", "Path" ]
				]
			},
			{
				"Title": "Unload Animation",
				"Parameters": [
					[ "Text", "Path" ]
				]
			},
			{
				"Title": "Set Color Data",
				"Parameters": [
					[ "Text", "Path" ],
					[ "Integer", "Frame Index" ],
					[ "Integer", "Color Index" ],
					[ "Integer", "Color" ]
				]
			}
		],
		"Conditions": [
			{
				"Title": "Is Extension Initialized?",
				"Triggered": false,
				"Parameters": [
				]
			},
			{
				"Title": "Initialize Extension",
				"Triggered": false,
				"Parameters": [
				]
			}
		],
		"Expressions": [
			{
				"Title": "Is Initialized(",
				"Returns": "Integer"
			},
			{
				"Title": "Init(",
				"Returns": "Integer"
			},
			{
				"Title": "GetRGB(",
				"Parameters": [
					[ "Integer", "Red" ],
					[ "Integer", "Green" ],
					[ "Integer", "Blue" ]
				],
				"Returns": "Integer"
			},
			{
				"Title": "GetIntDeviceType(",
				"Parameters": [
					[ "Text", "Name" ]
				],
				"Returns": "Integer"
			},
			{
				"Title": "GetIntDevice(",
				"Parameters": [
					[ "Text", "Name" ]
				],
				"Returns": "Integer"
			},
			{
				"Title": "GetFrameCountName(",
				"Parameters": [
					[ "Text", "Path" ]
				],
				"Returns": "Integer"
			},
			{
				"Title": "GetColorDataSize(",
				"Parameters": [
					[ "Text", "Path" ]
				],
				"Returns": "Integer"
			}
		],
		"Properties": [
		]
	}
}
